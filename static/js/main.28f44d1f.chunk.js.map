{"version":3,"sources":["loanPaymentIndex.jsx","loanPaymentSummary.jsx","loanPaymentCalculator.jsx","App.js","serviceWorker.js","index.js"],"names":["LoanPaymentIndex","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","remainingBalance","total","remainingLoan","id","react_default","a","createElement","className","toFixed","interest","Component","LoanPaymentSummary","Math","floor","totalLoan","loanWithInterest","payment","LoanPaymentCalculator","moreInfo","totalPaid","state","loanAmount","interestRate","numPeriods","test","update","bind","assertThisInitialized","populateRemainingLoan","handleSubmit","handleMoreInfo","prevProps","prevState","result","calculatePayment","setState","accumulator","i","top","bottom","pow","e","preventDefault","div","document","getElementById","show","style","display","innerHTML","_this2","src_loanPaymentSummary","onClick","keys","map","key","src_loanPaymentIndex","field","_this3","defineProperty","currentTarget","value","onSubmit","class","type","onChange","placeholder","displayResults","App","src_loanPaymentCalculator","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.28f44d1f.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass LoanPaymentIndex extends Component {\n  constructor(props){\n    super(props)\n    this.remainingBalance = this.props.total - this.props.remainingLoan[this.props.id]\n  }\n  \n  componentWillUpdate(){\n    this.remainingBalance = 0;\n    this.remainingBalance= this.props.total - this.props.remainingLoan[this.props.id]\n  }\n\n  render(){\n    return(\n      <div className='each-month-info'>\n        <div>{this.props.id}</div>\n        <div>${this.props.remainingLoan[this.props.id].toFixed(2)}</div>\n        <div>${this.remainingBalance.toFixed(2)}</div>\n        <div>${(this.props.interest * this.props.id).toFixed(2) }</div>\n      </div>\n    )\n  }\n}\n\nexport default LoanPaymentIndex;","import React, {Component} from 'react';\n\nclass LoanPaymentSummary extends Component{\n  constructor(props){\n    super(props)\n    \n  }\n\n  render(){\n    return(\n      <div>\n        <h2 id='summary-title'>Overall Summary of Loan</h2>\n        <div className='flex'>\n          <div id='summary'>\n            <div id='align-left'>Total Loan: </div>\n            <div>${Math.floor(this.props.totalLoan * 100) / 100}</div>\n            <div id='align-left'>Total Loan w/Interest: </div>\n            <div>${Math.floor(this.props.loanWithInterest * 100) / 100}</div>\n            <div id='align-left'>Monthly Payment: </div>\n            <div>${this.props.payment}</div>\n            <div id='align-left'>Total Interest Charged: </div>\n            <div>${Math.floor((this.props.loanWithInterest - this.props.totalLoan) * 100) / 100}</div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default LoanPaymentSummary;","import React, {Component} from 'react'\nimport LoanPaymentIndex from './loanPaymentIndex'\nimport LoanPaymentSummary from './loanPaymentSummary';\nimport { debug } from 'util';\n\nclass LoanPaymentCalculator extends Component {\n\n  constructor(props){\n    super(props);\n    this.remainingLoan = {}; \n    this.moreInfo = false;\n    this.totalPaid = 0;\n    this.state = {\n      payment: null,\n      loanAmount: '',\n      interestRate: '',  //will be percentage value\n      numPeriods: '',\n      totalPaid: 0,\n      remainingLoan: {},\n      test: null\n    };\n\n    this.update = this.update.bind(this);\n    this.populateRemainingLoan = this.populateRemainingLoan.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleMoreInfo = this.handleMoreInfo.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    if(this.state.numPeriods !== prevState.numPeriods){\n      let result = Math.floor(this.calculatePayment() * 100) / 100;\n      this.interest = Math.floor((result - (this.state.loanAmount / this.state.numPeriods)) * 100) / 100;\n      this.totalPaid = Math.floor((result * this.state.numPeriods) * 100) / 100;\n      this.setState({\n        payment: result,\n        totalPaid: this.totalPaid,\n      });\n      this.populateRemainingLoan(); \n    }\n  }\n\n  populateRemainingLoan(){\n    this.remainingLoan = {};\n    this.remainingLoan[1] = Math.floor(this.calculatePayment() * 100) / 100;\n    let accumulator = Math.floor(this.calculatePayment() * 100) / 100;\n    for(let i = 1; i < this.state.numPeriods; i++){\n      accumulator += this.calculatePayment();\n      this.remainingLoan[i+1] = accumulator;\n    }\n  }\n\n  calculatePayment(){\n    let top = this.state.loanAmount * this.state.interestRate / 100;\n    let bottom = 1 - Math.pow((1 + this.state.interestRate / 100), (this.state.numPeriods * -1));\n    return Math.floor(top / bottom * 100) / 100;\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n    let result = Math.floor(this.calculatePayment() * 100) / 100;\n    this.interest = Math.floor((result - (this.state.loanAmount/this.state.numPeriods)) * 100) / 100;\n    this.totalPaid = Math.floor((result * this.state.numPeriods) * 100) / 100;\n    this.setState({\n      payment: result,\n      totalPaid: this.totalPaid,\n    });\n    this.populateRemainingLoan(); \n  }\n\n  handleMoreInfo(e){\n    e.preventDefault();\n    let div = document.getElementById('more-info-table');\n    let show = document.getElementById('show-text');\n    if (this.moreInfo) {\n      this.moreInfo = false;\n      div.style.display = \"none\";\n      show.innerHTML = 'Show more?'\n    }else{\n      this.moreInfo = true;\n      div.style.display = \"block\";\n      show.innerHTML = 'Show less?'\n    }\n  }\n\n  displayResults(){\n    if(!!this.state.payment){\n      return(\n        <div>\n          <LoanPaymentSummary \n            totalLoan={this.state.loanAmount}\n            loanWithInterest={this.state.payment*this.state.numPeriods}\n            payment={this.state.payment}\n          />\n          <div id='show-text' onClick={(e) => {this.handleMoreInfo(e)}}>Show more?</div>\n          <div id='more-info-table'>\n            <div className='table-headers'>\n              <h3>Month</h3>\n              <h3>Paid Off</h3>\n              <h3>Remaining Loan</h3>\n              <h3>Interest Paid So Far!</h3>\n            </div>\n            <div className='scrollable-info'>\n              {Object.keys(this.remainingLoan).map(key => {\n                return <LoanPaymentIndex \n                          key={key} \n                          id={key} \n                          remainingLoan={this.remainingLoan} \n                          payment={this.state.payment} \n                          total={this.state.totalPaid}\n                          loanAmount={this.state.loanAmount} \n                          interest={this.interest}\n                        />\n              })}\n            </div>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  update(field){    \n    return e => this.setState({\n      [field]: e.currentTarget.value\n    });\n  } \n\n  render(){\n    return(\n\n      <div id='calculator-form'>\n        <h1 id='title'>Small Loan Payment Calculator</h1>\n        <form onSubmit={this.handleSubmit}>\n          <div className='flex'>\n            <div>\n              <i class=\"fas fa-dollar-sign\"></i>\n              <input className='' type=\"text\" value={this.state.loanAmount} onChange={this.update('loanAmount')} placeholder='Loan Amount($)'/>\n            </div>\n            <div>\n              <input className='' type=\"text\" value={this.state.interestRate} onChange={this.update('interestRate')} placeholder='Interest Rate(%)'/>\n              <i class=\"fas fa-percent\"></i>\n            </div>\n          </div>\n          <div className='flex'>\n            <div>\n              <i class=\"fas fa-calendar-week\"></i>\n              <input className='input-field' type=\"text\" value={this.state.numPeriods} onChange={this.update('numPeriods')} placeholder='Number of Months'/>\n            </div>\n            <div className='submit-button'>\n              <input id='submit-this' type=\"submit\" />\n              <i class=\"fas fa-check-circle\"></i>\n            </div>\n          </div>\n        </form>\n        <div>\n          {this.displayResults()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default LoanPaymentCalculator;\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport './loanPaymentCalculator.css';\nimport './loanPaymentSummary.scss';\nimport './loanPaymentIndex.scss';\nimport LoanPaymentCalculator from './loanPaymentCalculator';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <LoanPaymentCalculator />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}